import { Bot, InlineKeyboard, InputFile } from "grammy"
import { sendMenuMessage } from "../messages/menu"
import { Events } from "../constants"
import { createUser } from "../repos/createUser"
import path from "path"
import { PrismaLuna } from ".."

let isUser = false

export function registerCommands(bot: Bot) {
	bot.command("menu", async (ctx) => {
		await sendMenuMessage(ctx)
	})

	bot.command("start", async (ctx) => {
		const mainImagePath = path.resolve(__dirname, "../public/main.jpg")
		const keyboard = new InlineKeyboard().text("üåí –ü–æ–¥–∫–ª—é—á–∏—Ç—å –≤–ø–Ω üåí", Events.start)

		if (!isUser) {
			const user = await PrismaLuna.user.findFirst({
				where: { id: ctx.chat.id.toString() },
			})
			if (user?.id) {
				isUser = true
			} else {
				await createUser({ id: ctx.chat.id.toString(), name: ctx.chat.first_name || "" })
			}
		}

		await ctx.replyWithPhoto(new InputFile(mainImagePath), {
			caption: `–°–∞–ª—é—Ç, ${
				ctx.chat.first_name ?? "–ê–Ω–æ–Ω–∏–º :)"
			}\n\n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ä–∞—Ö –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ—Ç –∫–∞–∫–∏—Ö-–ª–∏–±–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!`,
			reply_markup: keyboard,
		})
	})
}
